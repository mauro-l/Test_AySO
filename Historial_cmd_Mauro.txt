pwd
cd ..
ls -l
cd ..
ls -l
cd
ls -l
cd ..
mkdir repogit
cd ..
mkdir test
ls -l
whoami
cd ..
ls -l
cd
cd ..
ls -l
mkdir test
sudo mkdir test
ls -l
cd test
cd ..
mkdir user
pwd
cd
pwd
ls -l
cat << FIN > otro_archivo
testeando 
a ver si anda esto
FIN

ls -l
cat otro_archivo
pwd
cd vagra
ls -l
cd carpeta_compartida/
sudo apt tree -y
sudo apt install tree -y
sudo update
sudo apt update
sudo apt install tree -y
cd ..
ls -l
mkdir -p eje3/{papa, mama}/hijos_{1...5}, amante
tree eje 3
tree eje3
tree eje3/
rm -rf eje3
echo $?
ls -l
cd amante
tree
cd ..
tree
cd mama tree
cd mama | tree
cd mama
pwd
cd mama}
tree
cd hijos_\{1...5\}\,/
tree
cd
ls -l
rm -rf amante
rm -rf mama}
ls -l
mkdir test
ls -l
cd test
mkdir -p eje1/
ls -l
rm -rf eje1
ls -l
mkdir -p eje1/{mama,papa}/hijos_{1...4}
ls -l
cd eje1 | tree
cd eje1
tree
cd mama
tree
cd hijos_\{1...4\}/
tree
cd
rm -rf eje1
echo $?
mkdir -p eje3/{papa,mama}/hijos_{1...3}
tree eje1/
tree eje3/
cd eje3/mama/hijos_\{1...3\}/
tree
cd
rm -rf eje3; echo $?
ls -l
cd test
ls -l
rm -rf eje1; echo$?
rm -rf eje1; echo $?
tree
history
mkdir -p eje3/{papa,mama}/hijos_{1...3}
tree
history
rm -rf eje3; echo $?
tree
mkdir -p eje3/{papa,mama}/hijos_{1..3}
tree
mkdir eje4/{papa/amante,{papa,mama}/hijos_{1..2}}
mkdir -p eje4/{papa/amante,{papa,mama}/hijos_{1..2}}
echo $?
tree
mkdir -p eje4/{{mama,papa}/hijos_{1..3},mama/amante} | tee
tree
mkdir -p eje5/{{mama,papa}/hijos_{1..3},mama/amante}; echo $?
tree
mkdir -p eje5/{{mama,papa}/hijos_{1..3},papa/amante}; echo $?
tree
ls -l
cd eje5
tree
cd ..
cd
sudo ls -l /var/logs
sudo ls -l
sudo ls -l /var/log/
sudo tail -f /var/log/dmesg
sudo cat /var/log/dmesg
sudo cat /var/log/dmesg | grep -i ata
sudo cat /var/log/dmesg | grep -i atax
sudo cat /var/log/dmesg | grep -i atach
sudo cat /var/log/dmesg | grep -i att
clear
sudo cat /var/log/dmesg | grep -i att
sudo dmesg | grep -i atta
sudo journalctl -k | grep -i atta 
sudo fdisk
sudo fdisk -l
echo "col1 : col2 :col3"
echo "col1 : col2 :col3" | awk -F ':' '{print $3}
echo "col1 : col2 :col3" | awk -F':' '{print $3}
echo "col1 : col2 :col3" | awk -F':' '{print $2}
echo "col1 : col2 :col3" | awk -F ':' '{print $2}
echo "col1 : col2 :col3" | awk -F ':' '{print $2 }
echo "col1 : col2 :col3" | awk -F ':' '{print $1 }
echo "col1 : col2 :col3" | awk -F '{print $1 }
echo "col1 : col2 :col3" | awk '{print $1 }
echo "col1 : col2 :col3" | awk '{print $1}

dd

echo "col1 : col2 :col3" | awk '{print $2}
echo "col1 : col2 :col3" | awk '{print $2}'
echo "col1 : col2 :col3" | awk -F ':' '{print $2}'
echo "col1 : col2 :col3" | awk -F ':' '{print $3}'
ssh-keygen -t ed25519
cat $HOME/.ssh/*.pub
pwd
ls -l
git clone
ll
mkdir repogit
cd repogit/
git clone git@github.com:mauro-l/Test_AySO.git
ll
cd Test_AySO/
touch examen
ll
alias ls
alias ll
ll
pwd
cat /etc/os-release
nano ~/.bashrc
source ~/.bashrc
pwd
nano ~/.bashrc
grep "PS1="
grep "PS1=" ~/.bashrc
echo $color_prompt
echo $TERM
vim .bashrc
ll
vim ./bashrc
vim ~/.bashrc
source ~/.bashrc
vim ~/.bashrc
nano ~/.bashrc
vim ~/.bashrc
source ~/.bashrc
vim ~/.bashrc
source ~/.bashrc
vim ~/.bashrc
source ~/.bashrc
vim ~/.bashrc
source ~/.bashrc
vim ~/.bashrc
source ~/.bashrc
vim ~/.bashrc
grep -i home_url /etc/os-release
man grep
man sed
man sed -i
echo "Usuario=(whoami)" > datos_usuario.txt; echo $?
ll
cat datos_usuario.txt 
sed datos_usuario.txt 
man sed
echo datos_usuario.txt | awk -F '=' {print $2}
echo datos_usuario.txt | awk -F '=' '{print $2}'
echo datos_usuario.txt | awk -F '=' '{print $1}'
cat datos_usuario.txt 
cat datos_usuario.txt | awk -F '=' '{print $2}'
vim datos_usuario.txt 
cat datos_usuario.txt 
vim datos_usuario.txt 
cat datos_usuario.txt 
vim datos_usuario.txt 
cat datos_usuario.txt 
echo "Usuario=$(whoami)"
echo "Usuario=$(whoami)" > datos_usuario.txt 
cat datos_usuario.txt 
vim datos_usuario.txt 
cat datos_usuario.txt 
sed -i 1d datos_usuario.txt 
cat datos_usuario.txt 
ll
echo "Usuario=$(whoami)"
echo "Usuario=$(whoami)" > datos_usuario.txt; echo $?
cat datos_usuario.txt 
git add .
git commit -m "ADD: Se agrega la resolucion del primer ejercicio"
git config --global user.email "maurol.vm@mail.com"
git config --global user.name "MauroLaime"
git commit -m "ADD: Se agrega la resolucion del primer ejercicio"
git push origin head
git push
$HOME/.bashrc
cat /etc/os-release 
cat /proc
history
history !
cat /etc/os-release 
/proc/cpuinfo
cat /proc/cpuinfo
man grep
grep "model name" /proc/cpuinfo 
grep "model name" /proc/cpuinfo tail -n1 >> datos_usuario.txt 
grep tail -n1 "model name" /proc/cpuinfo >> datos_usuario.txt 
grep "model name" tail -n1 /proc/cpuinfo >> datos_usuario.txt 
grep "model name" | tail -n1 /proc/cpuinfo >> datos_usuario.txt 
grep "model name" | tail -n1 /proc/cpuinfo >> datos_usuario.txt; echo $? 
grep "model name" /proc/cpuinfo | head -n1 >> datos_usuario.txt; echo $? 
cat datos_usuario.txt 
vim datos_usuario.txt 
cat datos_usuario.txt 
history 
grep "model name" /proc/cpuinfo | tail -n1 >> datos_usuario.txt; echo $? 
cat datos_usuario.txt 
grep "model name" /proc/cpuinfo 
grep "model name" /proc/cpuinfo | head -n1
grep "model name" /proc/cpuinfo | head -n1 >> datos_usuario.txt; echo $?
cat datos_usuario.txt 
man sed
sed -i 3d datos_usuario.txt; echo $?
cat datos_usuario.txt 
sed -i 3d datos_usuario.txt && cat datos_usuario.txt
sed -i 3d datos_usuario.txt; cat datos_usuario.txt
git status
git add .
git commit -m "feat: Updating CPU information"
git push origin head
git push origin HEAD
git remote -v
cat README.md 
echo README.md 
echo "README.md" 
cat << FIN > README.md 
Alumno: Mauro Laime
Division: 314
Turno: Noche
FIN

cat README.md 
git checkout -- README.md
cat README.md 
cat << FIN >> README.md 
Alumno: Mauro Laime
Division: 314
Turno: Noche
FIN

cat README.md 
git checkout -- README.md
cat README.md 
cat << FIN >> README.md 

FIN

cat README.md 
cat << FIN >> README.md 
Alumno: Mauro
Division: 314
Turno: Noche
FIN

cat README.md 
git status
git add .
git commit -m "feat: Adding Readme with user data"
git push origin HEAD
history -a 
